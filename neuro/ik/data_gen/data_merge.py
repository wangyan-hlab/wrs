import numpy as np

test_data_1 = np.load("cobotta_ik_jnt1_min_max.npy", allow_pickle=True)
test_data_2 = np.load("cobotta_ik_jnt2_min_max.npy", allow_pickle=True)
test_data_3 = np.load("cobotta_ik_jnt3_min_max.npy", allow_pickle=True)
test_data_4 = np.load("cobotta_ik_jnt4_min_max.npy", allow_pickle=True)
test_data_5 = np.load("cobotta_ik_jnt5_min_max.npy", allow_pickle=True)
test_data_6 = np.load("cobotta_ik_jnt6_min_max.npy", allow_pickle=True)
test_data_7 = np.load("cobotta_ik_jnt7_min_max.npy", allow_pickle=True)
test_data_8 = np.load("cobotta_ik_jnt8_min_max.npy", allow_pickle=True)
res_min_max = np.concatenate((test_data_1, test_data_2), axis=0)
res_min_max = np.concatenate((res_min_max, test_data_3), axis=0)
res_min_max = np.concatenate((res_min_max, test_data_4), axis=0)
res_min_max = np.concatenate((res_min_max, test_data_5), axis=0)
res_min_max = np.concatenate((res_min_max, test_data_6), axis=0)
res_min_max = np.concatenate((res_min_max, test_data_7), axis=0)
res_min_max = np.concatenate((res_min_max, test_data_8), axis=0)
res_min_max = np.array([np.min(res_min_max, 0), np.max(res_min_max, 0)])
print(res_min_max, res_min_max.shape)
np.save("cobotta_ik_min_max", res_min_max)

train_data_1 = np.load("cobotta_ik_jnt1.npy", allow_pickle=True)
train_data_2 = np.load("cobotta_ik_jnt2.npy", allow_pickle=True)
train_data_3 = np.load("cobotta_ik_jnt3.npy", allow_pickle=True)
train_data_4 = np.load("cobotta_ik_jnt4.npy", allow_pickle=True)
train_data_5 = np.load("cobotta_ik_jnt5.npy", allow_pickle=True)
train_data_6 = np.load("cobotta_ik_jnt6.npy", allow_pickle=True)
train_data_7 = np.load("cobotta_ik_jnt7.npy", allow_pickle=True)
train_data_8 = np.load("cobotta_ik_jnt8.npy", allow_pickle=True)
res = np.concatenate((train_data_1, train_data_2), axis=0)
res = np.concatenate((res, train_data_3), axis=0)
res = np.concatenate((res, train_data_4), axis=0)
res = np.concatenate((res, train_data_5), axis=0)
res = np.concatenate((res, train_data_6), axis=0)
res = np.concatenate((res, train_data_7), axis=0)
res = np.concatenate((res, train_data_8), axis=0)
for data in res:
    data[0] = (data[0]-res_min_max[0])/(res_min_max[1]-res_min_max[0])

print(res, res.shape)
np.save("cobotta_ik", res)
